// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StorageRoom;

#nullable disable

namespace StorageRoom.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241008165458_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StorageRoom.Models.Entity.Baggage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BaggageTag")
                        .HasColumnType("text");

                    b.Property<Guid>("PassengerId")
                        .HasColumnType("uuid");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("PassengerId");

                    b.ToTable("Baggage");
                });

            modelBuilder.Entity("StorageRoom.Models.Entity.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Destination")
                        .HasColumnType("text");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("StorageRoom.Models.Entity.Passenger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("uuid");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("StorageRoom.Models.Entity.Baggage", b =>
                {
                    b.HasOne("StorageRoom.Models.Entity.Passenger", "Passenger")
                        .WithMany("Baggages")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("StorageRoom.Models.Entity.Passenger", b =>
                {
                    b.HasOne("StorageRoom.Models.Entity.Flight", "Flight")
                        .WithMany("Passengers")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("StorageRoom.Models.Entity.Flight", b =>
                {
                    b.Navigation("Passengers");
                });

            modelBuilder.Entity("StorageRoom.Models.Entity.Passenger", b =>
                {
                    b.Navigation("Baggages");
                });
#pragma warning restore 612, 618
        }
    }
}
